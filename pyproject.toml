# [project]
# name = "pinochle"
# version = "0.1.0"
# description = "A distributed multi-player Pinochle game."
# authors = ["Paul Kronenwetter <kronenpj@gmail.com>"]
# license = "GPL-3.0"
# readme = "README.md"
# python = "^3.6"
# homepage = "https://gitlab.com/iqpinochle/pinochle"
# repository = "https://gitlab.com/iqpinochle/pinochle"

[tool.poetry]
name = "pinochle"
version = "0.1.0"
description = "Multi-player, server-based Pinochle game."
authors = ["Paul Kronenwetter <kronenpj@gmail.com>"]
license = "GPL-3.0"
readme = "README.md"
homepage = "https://gitlab.com/iqpinochle/pinochle"
repository = "https://gitlab.com/iqpinochle/pinochle"
exclude = [ "*.db" ]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Python :: Implementation :: CPython",
    "Python :: Implementation :: PyPy",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
]

[tool.poetry.dependencies]
python = "^3.6"
brython="^3.9"
connexion = {version = "^2.7.0", extras = ["swagger-ui"]}
flask_sockets = "^0.2.1"
flask-marshmallow="^0.14.0"
Flask-SQLAlchemy="^2.3.2"
Flask="^1.0"
gunicorn = "^20.0.4"
jsonpickle = "^2.0"
marshmallow-sqlalchemy="^0.24.0"
marshmallow="^3.0"
openapi-spec-validator="^0.2.9"
psycopg2-binary="^2.8.0"
python-dateutil = "^2.8.0"
regex = "^2021.7.6"
sqlalchemy="^1.3.0" # If pyinstaller is desired, add ,<1.4.0
Werkzeug="^1.0"

[tool.poetry.dev-dependencies]
autopep8 = "^1.5.6"
black = { version = "^19.10b0", allow-prereleases = true, python = "^3.6", markers = "platform_python_implementation == 'CPython'" }
bumpversion = "^0.6.0"
coverage = {version = "^5.5", extras = ["toml"]}
eralchemy = "^1.2.10"
mockbrython = "^0.0.3"
pygraphviz = [
    {version = "<=1.6", python = "3.6"},
    {version = "^1.7", python = "^3.7"}
]
pylint = "^2.7.2"
pytest = "^6.2.2"
pytest-cov = "^2.11.1"
pytest-flask = "^1.2.0"
pytest-selenium = "^2.0.1"
rope = "^0.18.0"
tox = {version = "^3.23.0", extras = ["toml"]}
# tox-poetry-dev-dependencies = "^0.0.5"
yapf = "^0.31.0"
# A little skeptical about this one.
#mutmut = "^2.1.0"

[tool.tox]
# From: https://github.com/python-poetry/poetry/issues/1941#issuecomment-667152907
legacy_tox_ini = """
[tox]
# TODO: Add py310 when required packages support it.
envlist = coverage-clean, py{36,37,38,39}, coverage-combine
skip_missing_interpreters = True
isolated_build = True

[tox:.package]
# note tox will use the same python version as under what tox is installed to package
# so unless this is python 3 you can require a given python version for the packaging
# environment via the basepython key
basepython = python3

[testenv]
deps =
    poetry
    coverage [toml]
    pytest
# extras = test
# requires =
#     tox-poetry-dev-dependencies
# poetry_add_dev_dependencies = True
commands =
    poetry install --no-root -v
    coverage run --parallel -m pytest {posargs}
setenv =
    PYTHONPATH=src
    PYENV=none

[testenv:coverage-clean]
description = Clean coverage information.
deps = coverage [toml]
skip_install = true
commands = coverage erase

[testenv:coverage-combine]
description = Consolidate coverage information and generate XML file.
deps = coverage [toml]
skip_install = true
commands =
    coverage combine
    coverage xml
depends =
    py36
    py37
    py38
    py39
    py310
    pypy3
"""

[tool.pytest.ini_options]
addopts = "--strict-markers"
markers = [
    'wip: Tests for features currently in-work',
    'slow: Mark slow tests to ignore them for development'
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.coverage.paths]
source = ["src", ".tox/**/site-packages" ]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
show_missing = true
skip_covered = true
omit = [
   "**/cards/**",
   "**/custom_log.py",
   "**/game_old/**",
   "**/log_decorator.py",
   "**/__version__.py",
   "**/__main__.py"
]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.coverage.xml]
output = ".coverage.xml"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
